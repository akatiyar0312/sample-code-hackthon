steps:
  # Step 1: Build the Java JAR
  - name: 'gcr.io/cloud-builders/mvn'
    args: ['clean', 'package', '-DskipTests']
    id: 'Build JAR'

  # Step 2: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    args:
      [
        'build',
        '-t',
        'gcr.io/linear-theater-463712-r8/payment-backend:$COMMIT_SHA',
        '.'
      ]
    id: 'Docker Build'

  # Step 3: Push Docker image to GCR
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/linear-theater-463712-r8/payment-backend:$COMMIT_SHA']
    id: 'Push Image'

  # Step 4: Configure kubectl to connect to GKE
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        gcloud container clusters get-credentials payment-cluster \
          --zone us-central1 \
          --project linear-theater-463712-r8
    id: 'Connect to GKE'

  # Step 5: Deploy to GKE with kubectl
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: bash
    args:
      - -c
      - |
        sed -i "s|IMAGE_PLACEHOLDER|gcr.io/linear-theater-463712-r8/payment-backend:$COMMIT_SHA|g" k8s/deployment.yaml
        kubectl apply -f k8s/deployment.yaml
        kubectl apply -f k8s/service.yaml
    id: 'Apply K8s Resources'

images:
  - 'gcr.io/linear-theater-463712-r8/payment-backend:$COMMIT_SHA'

options:
  logging: CLOUD_LOGGING_ONLY
